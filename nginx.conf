# задаёт пользователя и группу, с правами которого будут работать рабочие процессы
user nginx nginx;

# задаёт число рабочих процессов
worker_processes auto;

# конфигурирует запись в лог
error_log /var/log/nginx/error.log warn;

events {
    # задаёт метод, используемый для обработки соединений
    use epoll;

    # задаёт максимальное число соединений, которые одновременно может открыть рабочий процесс
    worker_connections 1024;

    # рабочий процесс за один раз будет принимать сразу все новые соединения
    multi_accept on;
}

http {

    # задаёт формат лога
    log_format main escape=none
        'time="$time_local" '
        'referer="$http_referer" '
        'remote_addr="$remote_addr" '
        'user_agent="$http_user_agent" '
        'method="$request_method" '
        'protocol="$request" '
        'request_length="$request_length" '
        'request_time="$request_time" '
        'response_code="$status" '
    ;

    # задаёт путь, формат и настройки буферизованной записи в лог
    access_log /var/log/nginx/access.log main;

    include /etc/nginx/mime.types;

    sendfile on;
    keepalive_timeout 10;

    server {
        # задаёт адрес и порт для IP на которых сервер будет принимать запросы
        listen 80;

        # задаёт имена виртуального сервера
        server_name 'invest_gui';

        location / {

            # задаёт корневой каталог для запросов
            root /app;

            # определяет файлы, которые будут использоваться в качестве индекса
            index index.html;

            # проверяет существование файлов в заданном порядке
            try_files $uri $uri/ /index.html;
        }
    }
}
